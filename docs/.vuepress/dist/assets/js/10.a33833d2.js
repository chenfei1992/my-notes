(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{360:function(t,l,n){"use strict";n.r(l);var D=n(42),O=Object(D.a)({},(function(){var t=this,l=t.$createElement,n=t._self._c||l;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"virtual-dom-的优势在哪里"}},[t._v("Virtual DOM 的优势在哪里")]),t._v(" "),n("p",[t._v("首先我们需要知道：\nDOM引擎、JS引擎相互独立，但又工作在同一线程（主线程）JS代码调用DOM API必须挂起JS引擎、转换传入入参数据、激活DOM引擎，DOM重绘后再转换可能有的返回值，最后激活JS引擎并继续执行若有频繁的DOM API调用，且浏览器厂商不做“批量处理”优化，引擎间切换的单位代价将迅速积累若其中有强制重绘的DOM API调用，重新计算布局，重新绘制图像会引起更大的性能消耗\n其次是VDOM和真实DOM的区别和优化：")]),t._v(" "),n("ol",[n("li",[t._v("虚拟DOM不会立马进行排版与重绘操作")]),t._v(" "),n("li",[t._v("虚拟DOM进行频繁修改，然后一次性比较并修改真实DOM中需要改的部分，最后在真实DOM中进行排版与重绘，减少过多DOM节点排版与重绘损耗")]),t._v(" "),n("li",[t._v("虚拟DOM有效降低大面积真实DOM的重绘与排版，因为最终与真实DOM比较差异，可以只渲染局部")])])])}),[],!1,null,null,null);l.default=O.exports}}]);